/*****************************************************************************
 * OperationUnitPrice クラスで使用される単価プロパティ用のクラスです。
 *****************************************************************************/
class Amount {
  /***************************************************************************
   * CONSTRUCTOR
   ***************************************************************************/
  constructor(item = {}) {
    this.initialize(item)
  }

  /***************************************************************************
   * INITIALIZE
   ***************************************************************************/
  initialize(item = {}) {
    // 通常単価
    this.normal = typeof item.normal === 'number' ? item.normal : 0

    // 半勤単価
    this.half = typeof item.half === 'number' ? item.half : 0

    // 中止単価
    this.cancel = typeof item.cancel === 'number' ? item.cancel : 0

    // 残業単価
    this.overtime = typeof item.overtime === 'number' ? item.overtime : 0
  }

  /***************************************************************************
   * TO OBJECT
   ***************************************************************************/
  toObject() {
    return { ...this }
  }
}

/*****************************************************************************
 * 稼働実績ドキュメントで使用される単価情報のためのクラスです。
 * @author shisyamo4131
 * @refact 2025-01-24
 *****************************************************************************/
export default class OperationCount {
  /***************************************************************************
   * CONSTRUCTOR
   ***************************************************************************/
  constructor(item = {}) {
    this.initialize(item)
  }

  /***************************************************************************
   * INITIALIZE
   ***************************************************************************/
  initialize(item = {}) {
    // 資格なし
    this.standard = new Amount(item.standard || {})

    // 資格あり
    this.qualified = new Amount(item.qualified || {})
  }

  /***************************************************************************
   * TO OBJECT
   ***************************************************************************/
  toObject() {
    return {
      ...this,
      standard: this.standard.toObject(),
      qualified: this.qualified.toObject(),
    }
  }
}
